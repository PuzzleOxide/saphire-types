use either :: Either ; use crate :: types :: * ; pub enum GameAction { StartLoop { } , SetFurnaceCookTime { furnace_location : Location , ticks : Number } , EnableBlockDrops { } , FillContainer { container_location : Location , items_to_fill_with : Vec < Item > } , BreakBlock { blocks_to_break : Vec < Location > } , LPFXSpiral { } , ParticleSphere { } , BoneMealBlock { blocks_to_bone_meal : Vec < Location > , number_of_uses : Option < Number > } , DebugStackTrace { } , SpawnFallingBlock { block_location : Location , block_material : Block , block_data : Vec < BlockTag > } , SendDiscordWebhookMessage { webhook_url : Text , message_content : Text } , ChangeSignText { sign_location : Location , line_number : Number , new_text : Option < MiniMessage > } , RandomTickBlock { blocks_to_tick : Vec < Location > , number_of_ticks : Option < Number > } , SendWebRequest { url_to_request : Text , content_body : Option < Text > } , ClearScBoard { } , HideSidebar { } , ReplaceContainerItems { container_location : Location , items_to_replace : Vec < Item > , item_to_replace_with : Item , amount_of_items_to : Option < Number > } , SetEventProjectile { projectile_to_launch : Option < Projectile > } , SpawnItemDisplay { } , CreateExplosion { explosion : Location , explosion_power_c07c47 : Option < Number > } , SpawnMob { mob_type_ : SpawnEgg , spawn_location : Location , health : Option < Number > , custom_name : Option < MiniMessage > , effects : Vec < Potion > , equipment : Vec < Item > } , SetIteminBrushableBlock { block_location : Location , item : Option < Item > } , ParticleLineA { } , SpawnEyeofEnder { location_to_spawn_at : Location , destination : Option < Location > , lifespan_ticks : Option < Number > , custom_name : Option < MiniMessage > } , ShowSidebar { } , SpawnAreaofEffectCloud { spawn_location : Location , effect_to_apply : Vec < Potion > , radius_blocks : Option < Number > , duration_ticks : Option < Number > } , ParticleSpiral { } , SetBlockData { location : Vec < Location > , block_data : Vec < BlockTag > } , LaunchGameProjectile { projectile_to_launch : Projectile , launch_point : Location , custom_name : Option < MiniMessage > , speed : Option < Number > , inaccuracy : Option < Number > } , SpawnFirework { firework_rocket : Item , spawn_location : Location } , SetBlock { block_to_set : Block , block_locations : Vec < Location > , block_data : Vec < BlockTag > } , SpawnItemDisp { spawn_location : Location , displayed_item : Item } , SetEventDamage { new_damage_amount : Number } , SetBlockGrowth { block_location : Location , growth_stage : Option < Number > } , Wait { } , SetContainerName { container_location : Location , name : MiniMessage } , SpawnItem { items_to_spawn : Vec < Item > , spawn_location : Location , custom_name : Option < MiniMessage > } , SetSignTextColor { sign_location : Location } , SetPlayerHead { head_location : Location , head : Either < Item , Text > } , RemoveHologram { } , RemoveContainerItems { container_location : Location , items_to_remove : Vec < Item > } , SpawnShulkerBullet { spawn_location : Location } , SpawnRngItem { } , FireworkEffect { } , SetRegion { block_to_set : Block , corner_1 : Location , corner_2 : Location , block_data : Option < BlockTag > } , SetContainerContents { container_location : Location , items_to_set : Vec < Item > } , SpawnInteractionEntity { spawn_location : Location , hitbox_width : Option < Number > , hitbox_height : Option < Number > } , SetIteminContainerSlot { container_location : Location , item_to_set : Option < Item > , slot : Number } , ParticleCircleA { } , CloneRegion { corner_1 : Location , corner_2 : Location , position_to_copy_from : Location , position_to_paste_to : Location } , UncancelEvent { } , SetLecternBook { lectern_location : Location , book_to_put : Option < Item > , displayed_page : Option < Number > } , SpawnPrimedTNT { spawn_location : Location , tnt_power_c07c47 : Option < Number > , fuse_duration : Option < Number > , custom_name : Option < MiniMessage > } , SpawnArmorStand { spawn_location : Location , custom_name : Option < MiniMessage > , equipment : Vec < Item > } , SpawnExperienceOrb { spawn_location : Location , experience_amount : Option < Number > , custom_name : Option < MiniMessage > } , SetEventHealAmount { new_healing_amount : Number } , PFXPath { } , SpawnBlockDisplay { spawn_location : Location , displayed_block : Block , block_data : Vec < BlockTag > } , ParticleRay { } , GenerateTree { tree_location_bottom : Location } , StopLoop { } , ClearContainer { container_location : Location } , SetScObj { } , CancelEvent { } , SpawnEndCrystal { spawn_location : Location , custom_name : Option < MiniMessage > } , ParticleEffect { } , SpawnEvokerFangs { spawn_location : Location , custom_name : Option < MiniMessage > } , SetEventSound { new_sound : Sound } , SetCampfireItem { campfire_location : Location , campfire_item : Item , cooking_time_ticks : Option < Number > } , SpawnTextDisplay { spawn_location : Location , displayed_text : Vec < MiniMessage > } , SetEventExperience { experience : Number } , SetContainerLock { container_location : Location , lock_key : Option < Text > } , SpawnVehicle { vehicle_type_ : Vehicle , spawn_location : Location , custom_name : Option < MiniMessage > } , SummonLightning { impact_location : Location } , ParticleSpiralA { } , RemoveScore { } , CreateHologram { } , SetScore { } , ParticleCluster { } , ParticleCircle { } , DisableBlockDrops { } , PFXLineA { } , ClearContainerItems { container_location : Location , items_to_clear : Vec < Item > } , ParticleLine { } , }