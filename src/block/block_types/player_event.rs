use either :: Either ; use crate :: types :: * ; pub enum PlayerEvent { PlayerCloseInventoryEvent { } , PlayerStartFlightEvent { } , PlayerBreakBlockEvent { } , PlayerStartSprintEvent { } , MobKillPlayerEvent { } , PlayerShootBowEvent { } , PlayerStopFlightEvent { } , PlayerTameMobEvent { } , PlayerLeftClickEvent { } , PlayerTakeDamageEvent { } , PlayerProjectileHitEvent { } , PlayerKillPlayerEvent { } , PlayerVehicleJumpEvent { } , PlayerClickInventorySlotEvent { } , PlayerRespawnEvent { } , PlayerSwapHandsEvent { } , ResourcePackLoad { } , PlayerDamageEntityEvent { } , PlayerSneakEvent { } , PlayerHealEvent { } , PlayerRightClickPlayerEvent { } , PlayerConsumeItemEvent { } , PlayerDeathEvent { } , PlayerPlaceBlockEvent { } , PlayerWalkEvent { } , PlayerPickUpItemEvent { } , PlayerDismountEvent { } , PotionCloudImbuePlayerEvent { } , PlayerLeaveGameEvent { } , PlayerDropItemEvent { } , PlayerChangeSlotEvent { } , PlayerRightClickEntityEvent { } , PlayerHorseJumpEvent { } , PlayerShootProjectileEvent { } , PlayerUnsneakEvent { } , PlayerFishEvent { } , FallDamage { } , PlayerBreakItemEvent { } , LoopEvent { } , PlayerResurrectEvent { } , PlayerRightClickEvent { } , PlayerClickMenuSlotEvent { } , PlayerRiptideEvent { } , PlayerKillMobEvent { } , PlayerJoinGameEvent { } , EntityDamagePlayerEvent { } , PlayerStopSprintingEvent { } , PlayerJumpEvent { } , ProjectileDamagePlayerEvent { } , PlayerCommandEvent { } , ResourcePackDecline { } , PlayerDamagePlayerEvent { } , }